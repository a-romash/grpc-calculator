// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.1
// source: orchestrator/orchestrator.proto

package orchestrator

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IsAlive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAlive bool  `protobuf:"varint,1,opt,name=is_alive,json=isAlive,proto3" json:"is_alive,omitempty"` // Indicates whether agent is alive
	IdAgent int32 `protobuf:"varint,2,opt,name=id_agent,json=idAgent,proto3" json:"id_agent,omitempty"` // Id of agent
}

func (x *IsAlive) Reset() {
	*x = IsAlive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orchestrator_orchestrator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsAlive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAlive) ProtoMessage() {}

func (x *IsAlive) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_orchestrator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAlive.ProtoReflect.Descriptor instead.
func (*IsAlive) Descriptor() ([]byte, []int) {
	return file_orchestrator_orchestrator_proto_rawDescGZIP(), []int{0}
}

func (x *IsAlive) GetIsAlive() bool {
	if x != nil {
		return x.IsAlive
	}
	return false
}

func (x *IsAlive) GetIdAgent() int32 {
	if x != nil {
		return x.IdAgent
	}
	return 0
}

type IdAgent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdAgent int32 `protobuf:"varint,1,opt,name=id_agent,json=idAgent,proto3" json:"id_agent,omitempty"` // Id of agent
}

func (x *IdAgent) Reset() {
	*x = IdAgent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orchestrator_orchestrator_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdAgent) ProtoMessage() {}

func (x *IdAgent) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_orchestrator_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdAgent.ProtoReflect.Descriptor instead.
func (*IdAgent) Descriptor() ([]byte, []int) {
	return file_orchestrator_orchestrator_proto_rawDescGZIP(), []int{1}
}

func (x *IdAgent) GetIdAgent() int32 {
	if x != nil {
		return x.IdAgent
	}
	return 0
}

type Expression struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdExpression      string      `protobuf:"bytes,1,opt,name=id_expression,json=idExpression,proto3" json:"id_expression,omitempty"`                // Id of expression
	PostfixExpression []*RPNToken `protobuf:"bytes,2,rep,name=postfix_expression,json=postfixExpression,proto3" json:"postfix_expression,omitempty"` // Expression
}

func (x *Expression) Reset() {
	*x = Expression{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orchestrator_orchestrator_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Expression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Expression) ProtoMessage() {}

func (x *Expression) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_orchestrator_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Expression.ProtoReflect.Descriptor instead.
func (*Expression) Descriptor() ([]byte, []int) {
	return file_orchestrator_orchestrator_proto_rawDescGZIP(), []int{2}
}

func (x *Expression) GetIdExpression() string {
	if x != nil {
		return x.IdExpression
	}
	return ""
}

func (x *Expression) GetPostfixExpression() []*RPNToken {
	if x != nil {
		return x.PostfixExpression
	}
	return nil
}

type RPNToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  int32  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`  // Type of token: operator or operand
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"` // Value of token: int32 or string
}

func (x *RPNToken) Reset() {
	*x = RPNToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orchestrator_orchestrator_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPNToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPNToken) ProtoMessage() {}

func (x *RPNToken) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_orchestrator_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPNToken.ProtoReflect.Descriptor instead.
func (*RPNToken) Descriptor() ([]byte, []int) {
	return file_orchestrator_orchestrator_proto_rawDescGZIP(), []int{3}
}

func (x *RPNToken) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *RPNToken) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ResultOfExpression struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdExpression string  `protobuf:"bytes,1,opt,name=id_expression,json=idExpression,proto3" json:"id_expression,omitempty"` //Id of expression
	Result       float32 `protobuf:"fixed32,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ResultOfExpression) Reset() {
	*x = ResultOfExpression{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orchestrator_orchestrator_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultOfExpression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultOfExpression) ProtoMessage() {}

func (x *ResultOfExpression) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_orchestrator_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultOfExpression.ProtoReflect.Descriptor instead.
func (*ResultOfExpression) Descriptor() ([]byte, []int) {
	return file_orchestrator_orchestrator_proto_rawDescGZIP(), []int{4}
}

func (x *ResultOfExpression) GetIdExpression() string {
	if x != nil {
		return x.IdExpression
	}
	return ""
}

func (x *ResultOfExpression) GetResult() float32 {
	if x != nil {
		return x.Result
	}
	return 0
}

var File_orchestrator_orchestrator_proto protoreflect.FileDescriptor

var file_orchestrator_orchestrator_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x6f,
	0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0c, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3f, 0x0a, 0x07,
	0x49, 0x73, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x6c,
	0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x6c, 0x69,
	0x76, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x64, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x22, 0x24, 0x0a,
	0x07, 0x49, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x64, 0x5f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x64, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x22, 0x78, 0x0a, 0x0a, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x64, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x64, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x12, 0x70, 0x6f, 0x73, 0x74, 0x66, 0x69,
	0x78, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x52, 0x50, 0x4e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x11, 0x70, 0x6f, 0x73, 0x74,
	0x66, 0x69, 0x78, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x34, 0x0a,
	0x08, 0x52, 0x50, 0x4e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x51, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4f, 0x66, 0x45,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x64, 0x5f,
	0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x69, 0x64, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xea, 0x01, 0x0a, 0x0c, 0x4f, 0x72, 0x63, 0x68, 0x65,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x3a, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x12, 0x15, 0x2e, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x49, 0x73, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x4a, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x12, 0x15,
	0x2e, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x49, 0x64,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x1a, 0x18, 0x2e, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x52, 0x0a, 0x16, 0x47, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4f, 0x66, 0x45,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x6f, 0x72, 0x63, 0x68,
	0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4f,
	0x66, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x42, 0x10, 0x5a, 0x0e, 0x2e, 0x2f, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_orchestrator_orchestrator_proto_rawDescOnce sync.Once
	file_orchestrator_orchestrator_proto_rawDescData = file_orchestrator_orchestrator_proto_rawDesc
)

func file_orchestrator_orchestrator_proto_rawDescGZIP() []byte {
	file_orchestrator_orchestrator_proto_rawDescOnce.Do(func() {
		file_orchestrator_orchestrator_proto_rawDescData = protoimpl.X.CompressGZIP(file_orchestrator_orchestrator_proto_rawDescData)
	})
	return file_orchestrator_orchestrator_proto_rawDescData
}

var file_orchestrator_orchestrator_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_orchestrator_orchestrator_proto_goTypes = []interface{}{
	(*IsAlive)(nil),            // 0: orchestrator.IsAlive
	(*IdAgent)(nil),            // 1: orchestrator.IdAgent
	(*Expression)(nil),         // 2: orchestrator.Expression
	(*RPNToken)(nil),           // 3: orchestrator.RPNToken
	(*ResultOfExpression)(nil), // 4: orchestrator.ResultOfExpression
	(*emptypb.Empty)(nil),      // 5: google.protobuf.Empty
}
var file_orchestrator_orchestrator_proto_depIdxs = []int32{
	3, // 0: orchestrator.Expression.postfix_expression:type_name -> orchestrator.RPNToken
	0, // 1: orchestrator.Orchestrator.Heartbeat:input_type -> orchestrator.IsAlive
	1, // 2: orchestrator.Orchestrator.GetExpressionToEvaluate:input_type -> orchestrator.IdAgent
	4, // 3: orchestrator.Orchestrator.GiveResultOfExpression:input_type -> orchestrator.ResultOfExpression
	5, // 4: orchestrator.Orchestrator.Heartbeat:output_type -> google.protobuf.Empty
	2, // 5: orchestrator.Orchestrator.GetExpressionToEvaluate:output_type -> orchestrator.Expression
	5, // 6: orchestrator.Orchestrator.GiveResultOfExpression:output_type -> google.protobuf.Empty
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_orchestrator_orchestrator_proto_init() }
func file_orchestrator_orchestrator_proto_init() {
	if File_orchestrator_orchestrator_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_orchestrator_orchestrator_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsAlive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orchestrator_orchestrator_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdAgent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orchestrator_orchestrator_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Expression); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orchestrator_orchestrator_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPNToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orchestrator_orchestrator_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultOfExpression); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_orchestrator_orchestrator_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_orchestrator_orchestrator_proto_goTypes,
		DependencyIndexes: file_orchestrator_orchestrator_proto_depIdxs,
		MessageInfos:      file_orchestrator_orchestrator_proto_msgTypes,
	}.Build()
	File_orchestrator_orchestrator_proto = out.File
	file_orchestrator_orchestrator_proto_rawDesc = nil
	file_orchestrator_orchestrator_proto_goTypes = nil
	file_orchestrator_orchestrator_proto_depIdxs = nil
}
